{"version":3,"sources":["API.js","Components/Header.js","Components/SubComponents/ReviewList.js","Components/SubComponents/AddReviewPage.js","Components/SubComponents/Votes.js","Components/NavBar.js","Components/ReviewDisplay.js","Components/ViewFullReview.js","App.js","index.js"],"names":["gameApi","axios","create","baseURL","login","event","username","setCurrentUser","setNewUser","setLoggedIn","setUserNotFound","setLoggingIn","a","preventDefault","get","user","data","logout","getReviews","category","setReviews","page","setLoading","setTotalReviews","requestString","reviews","total_count","addNewReview","newReview","setAddReviewLoading","setDisplayAddReview","setAddReviewFail","setAddReviewSuccess","post","newReviews","deleteReview","review_id","delete","viewReview","setViewingReview","setReviewComments","review","reviewComments","comments","addComment","setAddingComment","currentUser","newCommentBody","body","deleteComment","comment_id","reviewUpvote","setPlusOrMinus","patch","inc_votes","reviewDownvote","commentUpvote","comment","err","commentDownvote","Header","loggedIn","history","useHistory","useState","newUser","userNotFound","loggingIn","id","to","onSubmit","push","type","placeholder","onChange","target","value","required","ReviewList","map","className","onClick","title","owner","created_at","slice","AddReviewPage","newReviewTitle","setNewReviewTitle","newReviewBody","setNewReviewBody","newReviewDesigner","setNewReviewDesigner","newReviewCategory","setNewReviewCategory","newReviewPicture","setNewReviewPicture","review_body","designer","review_img_url","htmlFor","name","rows","cols","Votes","hasClicked","setHasClicked","plusOrMinus","votes","NavBar","setCategory","displayCategorySelector","setDisplayCategorySelector","displayAddReview","addReviewLoading","addReviewSuccess","addReviewFail","current","ReviewDisplay","setPage","totalReviews","disabled","ViewFullReview","viewingReview","addingComment","setNewCommentBody","src","alt","length","author","App","loading","useEffect","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57fbfe19.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst gameApi = axios.create({ baseURL: 'https://tp-boardgame-api.herokuapp.com/api' });\n\nconst login = async (event, username, setCurrentUser, setNewUser, setLoggedIn, setUserNotFound, setLoggingIn) => {\n    event.preventDefault();\n    setLoggingIn(true);\n    setUserNotFound(false);\n    try {\n        const user = await gameApi.get(`/users/${username}`);\n        setCurrentUser(user.data.user);\n        setLoggedIn(true);\n        setNewUser('');\n        setLoggingIn(false);\n    } catch (err) {\n        setUserNotFound(true);\n        setLoggingIn(false);\n    };\n};\nconst logout = async (event, setCurrentUser, setLoggedIn) => {\n    event.preventDefault();\n    setCurrentUser({});\n    setLoggedIn(false);\n};\nconst getReviews = async (category, setReviews, page, setLoading, setTotalReviews) => {\n    setLoading(true);\n    let requestString = `/reviews?page=${page}&limit=5`\n    if (category !== 'all') requestString += `&category=${category}`;\n    try {\n        const reviews = await gameApi.get(requestString);\n        setTotalReviews(reviews.data.total_count);\n        setReviews(reviews.data.reviews);\n        setLoading(false);\n    } catch {\n        setLoading(false);\n    }\n}\nconst addNewReview = async (event, newReview, setAddReviewLoading, setDisplayAddReview, setAddReviewFail, setAddReviewSuccess, setReviews, setLoading, page, category) => {\n    event.preventDefault();\n    setAddReviewLoading(true);\n    let requestString = `/reviews?page=${page}&limit=5`\n    if (category !== 'all') requestString += `&category=${category}`;\n    try {\n        await gameApi.post('/reviews', newReview);\n        setAddReviewLoading(false);\n        setDisplayAddReview(false);\n        setAddReviewSuccess(true);\n        setLoading(true);\n        const newReviews = await gameApi.get(requestString);\n        setReviews(newReviews.data.reviews);\n        setLoading(false);\n    } catch (err) {\n        setAddReviewLoading(false);\n        setAddReviewFail(true);\n    };\n};\nconst deleteReview = async (event, review_id, category, setReviews, page, setLoading) => {\n    event.preventDefault();\n    setLoading(true);\n    let requestString = `/reviews?page=${page}&limit=5`\n    if (category !== 'all') requestString += `&category=${category}`;\n    try {\n        await gameApi.delete(`/reviews/${review_id}`);\n        const newReviews = await gameApi.get(requestString);\n        setReviews(newReviews.data.reviews);\n        setLoading(false);\n    } catch (err) {\n        setLoading(false);\n    }\n};\nconst viewReview = async (event, review_id, setViewingReview, setLoading, setReviewComments) => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n        const review = await gameApi.get(`/reviews/${review_id}`);\n        const reviewComments = await gameApi.get(`/reviews/${review_id}/comments`);\n        setViewingReview(review.data.review);\n        setReviewComments(reviewComments.data.comments);\n        setLoading(false);\n    } catch (err) {\n        setLoading(false);\n    }\n};\nconst addComment = async (event, review_id, setAddingComment, setReviewComments, currentUser, newCommentBody) => {\n    event.preventDefault();\n    setAddingComment(true);\n    try {\n        await gameApi.post(`/reviews/${review_id}/comments`, { username: currentUser.username, body: newCommentBody });\n        const reviewComments = await gameApi.get(`/reviews/${review_id}/comments`);\n        setReviewComments(reviewComments.data.comments);\n        setAddingComment(false);\n    } catch (err) {\n        setAddingComment(false);\n    }\n}\nconst deleteComment = async (event, comment_id, setReviewComments, review_id) => {\n    event.preventDefault();\n    try {\n        await gameApi.delete(`/comments/${comment_id}`)\n        const reviewComments = await gameApi.get(`/reviews/${review_id}/comments`);\n        setReviewComments(reviewComments.data.comments);\n    } catch (err) {\n    }\n}\nconst reviewUpvote = async (review, setPlusOrMinus) => {\n    try {\n        await gameApi.patch(`/reviews/${review.review_id}`, { inc_votes: 1 });\n    } catch (err) {\n        setPlusOrMinus(0);\n    };\n};\nconst reviewDownvote = async (review, setPlusOrMinus) => {\n    try {\n        await gameApi.patch(`/reviews/${review.review_id}`, { inc_votes: -1 });\n    } catch (err) {\n        setPlusOrMinus(0);\n    }\n}\nconst commentUpvote = async (comment, setPlusOrMinus) => {\n    try {\n        gameApi.patch(`/comments/${comment.comment_id}`, { inc_votes: 1 });\n    } catch (err) {\n        setPlusOrMinus(0);\n    }\n}\nconst commentDownvote = async (comment, setPlusOrMinus) => {\n    try {\n        gameApi.patch(`/comments/${comment.comment_id}`, { inc_votes: -1 });\n    } catch (err) {\n        setPlusOrMinus(0);\n    }\n}\nexport { login, logout, getReviews, addNewReview, deleteReview, viewReview, addComment, deleteComment, reviewUpvote, commentDownvote, commentUpvote, reviewDownvote };","import { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { login, logout } from '../API';\nimport '../Styles/header.css'\n\nconst Header = ({ currentUser, setCurrentUser, loggedIn, setLoggedIn }) => {\n    const history = useHistory();\n    const [newUser, setNewUser] = useState('');\n    const [userNotFound, setUserNotFound] = useState(false);\n    const [loggingIn, setLoggingIn] = useState(false);\n    return (\n        <header id=\"titleAndLogin\">\n            <Link to=\"/\"><h1>Boardgamiacs</h1></Link>\n            <form id=\"loginForm\" onSubmit={loggedIn ?\n                event => logout(event, setCurrentUser, setLoggedIn) :\n                event => {\n                    login(event, newUser, setCurrentUser, setNewUser, setLoggedIn, setUserNotFound, setLoggingIn)\n                    history.push(\"/\")\n                }\n            }>\n                {loggingIn ? <p>Logging in...</p> :\n                    loggedIn ?\n                        <p>{currentUser.username}</p> :\n                        <input id=\"loginUsername\" type=\"text\" placeholder=\"username\" onChange={event => setNewUser(event.target.value)} value={newUser} required />}\n                {loggingIn ? null :\n                    loggedIn ?\n                        <button id=\"logoutButton\">log out</button> :\n                        <button id=\"loginButton\">log in</button>}\n                {userNotFound && <p>Sorry, we couldn't find that user</p>}\n            </form>\n        </header>\n    );\n};\nexport default Header;","import { deleteReview, viewReview } from '../../API'\nimport '../../Styles/reviewList.css'\nimport { Link } from 'react-router-dom';\nimport { Votes } from './SubComponentExporter'\n\n\nconst ReviewList = ({ reviews, currentUser, category, setReviews, page, setLoading, setViewingReview, setReviewComments }) => {\n    return (\n        <ul id=\"reviewList\">\n            {reviews.map(review => {\n                return (\n                    <li key={review.review_id} className=\"review\">\n                        <h3 className=\"reviewTitle\" onClick={event => viewReview(event, review.review_id, setViewingReview, setLoading, setReviewComments)}> <Link to=\"/viewFullReview\" >{review.title}</Link></h3>\n                        <h4 className=\"reviewAuthor\">{review.owner}</h4>\n                        <h5 className=\"timeStamp\">{review.created_at.slice(0, 10)}</h5>\n                        <Votes review={review} />\n                        {currentUser.username === review.owner && <button onClick={event => deleteReview(event, review.review_id, category, setReviews, page, setLoading)}>delete</button>}\n                    </li>\n                )\n            })}\n        </ul>\n    )\n};\n\nexport default ReviewList;","import { useState } from 'react';\nimport { addNewReview } from '../../API'\n\nconst AddReviewPage = ({ currentUser, setAddReviewLoading, setDisplayAddReview, setAddReviewFail, setAddReviewSuccess, setReviews, setLoading, page, category }) => {\n    const [newReviewTitle, setNewReviewTitle] = useState('');\n    const [newReviewBody, setNewReviewBody] = useState('');\n    const [newReviewDesigner, setNewReviewDesigner] = useState('');\n    const [newReviewCategory, setNewReviewCategory] = useState('');\n    const [newReviewPicture, setNewReviewPicture] = useState('');\n    return (\n        <form onSubmit={event => {\n            const newReview = {\n                owner: currentUser.username, title: newReviewTitle, review_body: newReviewBody, designer: newReviewDesigner, category: newReviewCategory, review_img_url: newReviewPicture || null\n            };\n            addNewReview(event, newReview, setAddReviewLoading, setDisplayAddReview, setAddReviewFail, setAddReviewSuccess, setReviews, setLoading, page, category)\n        }}>\n            <label htmlFor=\"newReviewTitle\">What's your review called? :</label>\n            <br />\n            <input type=\"text\" id=\"newReviewTitle\" name=\"newReviewTitle\" value={newReviewTitle} onChange={event => setNewReviewTitle(event.target.value)} required />\n            <br />\n            <label htmlFor=\"newReviewBody\">So.... how was it? :</label>\n            <br />\n            <textarea id=\"newReviewBody\" name=\"newReviewBody\" rows=\"5\" cols=\"30\" value={newReviewBody} onChange={event => setNewReviewBody(event.target.value)} required />\n            <br />\n            <label htmlFor=\"newReviewDesigner\">And who made the game? :</label>\n            <br />\n            <input type=\"text\" id=\"newReviewDesigner\" name=\"newReviewDesigner\" value={newReviewDesigner} onChange={event => setNewReviewDesigner(event.target.value)} required />\n            <br />\n            <lable htmlFor=\"newReviewPictureUrl\">add a picture if you like :</lable>\n            <br />\n            <input type=\"url\" name=\"newReviewPictureUrl\" id=\"newReviewPictureUrl\" value={newReviewPicture} onChange={event => setNewReviewPicture(event.target.value)} />\n            <br />\n            <lable htmlFor=\"newReviewCategory\">Lastly, which category best fits this game? :</lable>\n            <br />\n            <select name=\"newReviewCategory\" id=\"newReviewCategory\" value={newReviewCategory} onChange={event => setNewReviewCategory(event.target.value)} required>\n                <option value=\"\">choose a category</option>\n                <option value=\"strategy\">Strategy</option>\n                <option value=\"hidden-roles\">Hidden roles</option>\n                <option value=\"dexterity\">Dexterity</option>\n                <option value=\"push-your-luck\">Push your luck</option>\n                <option value=\"roll-and-write\">Roll and Write</option>\n                <option value=\"deck-building\">Deck building</option>\n                <option value=\"engine-building\">Engine building</option>\n            </select>\n            <br />\n            <button type=\"submit\">Submit review</button>\n        </form>\n    )\n};\n\nexport default AddReviewPage;","import { useState } from 'react';\nimport { reviewUpvote, reviewDownvote, commentDownvote, commentUpvote } from '../../API';\nimport '../../Styles/Votes.css'\n\nconst Votes = ({ review, comment }) => {\n    const [hasClicked, setHasClicked] = useState(false);\n    const [plusOrMinus, setPlusOrMinus] = useState(0);\n    return (\n        <div id=\"reviewVoteBox\">\n            {hasClicked ?\n                <span aria-label=\"thumbs up, disabled\" className=\"thumb\">&#128077;</span> :\n                <span aria-label=\"thumbs up\" className=\"thumb\" onClick={() => {\n                    setHasClicked(true);\n                    setPlusOrMinus(1);\n                    if (review) {\n                        reviewUpvote(review, setPlusOrMinus);\n                    } else {\n                        commentUpvote(comment, setPlusOrMinus);\n                    };\n                }\n                }>&#128077;</span>}\n            <span>{review ? review.votes + plusOrMinus : comment.votes + plusOrMinus}</span>\n            {hasClicked ?\n                <span aria-label=\"thumbs down, disabled\" className=\"thumb\">&#128078;</span> :\n                <span aria-label=\"thumbs down, disabled\" className=\"thumb\" onClick={() => {\n                    setHasClicked(true);\n                    setPlusOrMinus(-1);\n                    if (review) {\n                        reviewDownvote(review, setPlusOrMinus);\n                    } else {\n                        commentDownvote(comment, setPlusOrMinus);\n                    };\n                }\n                }>&#128078;</span>}\n        </div>\n    );\n};\n\nexport default Votes;","import { useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { AddReviewPage } from './SubComponents/SubComponentExporter'\n\nconst NavBar = ({ setCategory, currentUser, setReviews, setLoading, page, category }) => {\n    const [displayCategorySelector, setDisplayCategorySelector] = useState(false);\n    const [displayAddReview, setDisplayAddReview] = useState(false);\n    const [addReviewLoading, setAddReviewLoading] = useState(false);\n    const [addReviewSuccess, setAddReviewSuccess] = useState(false);\n    const [addReviewFail, setAddReviewFail] = useState(false);\n    return (\n        <nav>\n            <p id=\"addReviewDisplayer\" onClick={\n                () => {\n                    setAddReviewSuccess(false);\n                    setAddReviewFail(false);\n                    setDisplayCategorySelector(false);\n                    setDisplayAddReview(current => !current);\n                }\n            }>Add a review</p>\n            {addReviewLoading ?\n                <p>submitting review...</p> :\n                displayAddReview &&\n                <AddReviewPage\n                    currentUser={currentUser}\n                    setAddReviewLoading={setAddReviewLoading}\n                    setDisplayAddReview={setDisplayAddReview}\n                    setAddReviewFail={setAddReviewFail}\n                    setAddReviewSuccess={setAddReviewSuccess}\n                    setReviews={setReviews}\n                    setLoading={setLoading}\n                    page={page}\n                    category={category} />}\n            {addReviewSuccess && <p>Great! thanks for your review</p>}\n            {addReviewFail && <p>oops someone knocked the board over, try again</p>}\n            <p id=\"categoryDisplayer\" onClick={\n                () => {\n                    setDisplayAddReview(false);\n                    setDisplayCategorySelector(current => !current)\n                }\n            }>Categories</p>\n            {displayCategorySelector && <div id=\"categorySelect\">\n                <Link to=\"/\"><p onClick={() => setCategory('all')} value=\"all\">All</p></Link>\n                <Link to=\"/\"><p onClick={() => setCategory('strategy')} value=\"strategy\">Strategy</p></Link>\n                <Link to=\"/\"><p onClick={() => setCategory('hidden-roles')} value=\"hidden-roles\">Hidden roles</p></Link>\n                <Link to=\"/\"><p onClick={() => setCategory('dexterity')} value=\"dexterity\">Dexterity</p></Link>\n                <Link to=\"/\"><p onClick={() => setCategory('push-your-luck')} value=\"push-your-luck\">Push your luck</p></Link>\n                <Link to=\"/\"><p onClick={() => setCategory('roll-and-write')} value=\"roll-and-write\">Roll and Write</p></Link>\n                <Link to=\"/\"><p onClick={() => setCategory('deck-building')} value=\"deck-building\">Deck building</p></Link>\n                <Link to=\"/\"><p onClick={() => setCategory('engine-building')} value=\"engine-building\">Engine building</p></Link>\n            </div>}\n        </nav>\n    );\n};\n\nexport default NavBar;","import { ReviewList } from \"./SubComponents/SubComponentExporter\";\n\nconst ReviewDisplay = ({ reviews, page, setPage, currentUser, category, setReviews, setLoading, setViewingReview, setReviewComments, totalReviews }) => {\n    return (\n        <section className=\"reviewDisplay\">\n            <ReviewList\n                reviews={reviews}\n                currentUser={currentUser}\n                page={page}\n                category={category}\n                setReviews={setReviews}\n                setLoading={setLoading}\n                setViewingReview={setViewingReview}\n                setReviewComments={setReviewComments} />\n            <div id=\"paginationButtons\">\n                <button onClick={() => setPage(page => page - 1)} disabled={page === 1 ? true : false}>previous</button>\n                <button onClick={() => setPage(page => page + 1)} disabled={(page * 5) >= totalReviews ? true : false}>next</button>\n            </div>\n        </section>\n    );\n};\n\nexport default ReviewDisplay;","import { useState } from 'react';\nimport '../Styles/reviewView.css'\nimport { addComment, deleteComment } from '../API';\nimport Votes from './SubComponents/Votes'\n\nconst ViewFullReview = ({ viewingReview, reviewComments, setReviewComments, currentUser }) => {\n    const [addingComment, setAddingComment] = useState(false);\n    const [newCommentBody, setNewCommentBody] = useState('');\n    return (\n        <div id=\"reviewAndComments\">\n            <div id=\"singleReview\">\n                <img src={viewingReview.review_img_url} alt=\"review snap\" id=\"reviewPicture\" />\n                <section>\n                    <p>{viewingReview.title}</p>\n                    <div>\n                        <p>Review by : {viewingReview.owner}</p>\n                        <p>Game by : {viewingReview.designer}</p>\n                    </div>\n                    <p>{viewingReview.review_body}</p>\n                    <Votes review={viewingReview} />\n                </section>\n            </div>\n            <label htmlFor=\"commentForm\">Comment :</label>\n            {addingComment ?\n                <p>submitting comment...</p> :\n                <form onSubmit={event => addComment(event, viewingReview.review_id, setAddingComment, setReviewComments, currentUser, newCommentBody)} name=\"commentForm\" id=\"commentForm\">\n                    <textarea name=\"commentBox\" id=\"commentBox\" cols=\"30\" rows=\"4\" onChange={event => setNewCommentBody(event.target.value)} required></textarea>\n                    <br />\n                    <button type=\"submit\">Add comment</button>\n                </form>}\n            {reviewComments.length > 0 ?\n                <ul className=\"comments\">\n                    {reviewComments.map(comment => {\n                        return (\n                            <li className=\"comment\" key={comment.comment_id}>\n                                <p>{comment.author}</p>\n                                <p>{comment.body}</p>\n                                <Votes comment={comment} />\n                                {currentUser.username === comment.author && <button onClick={event => deleteComment(event, comment.comment_id, setReviewComments, viewingReview.review_id)}>delete</button>}\n                            </li>\n                        )\n                    })}\n                </ul> :\n                <p>Nothing yet boi, feel free to add a review though!</p>}\n        </div>\n    );\n};\n\nexport default ViewFullReview;","import './App.css';\nimport { Switch, Route } from 'react-router';\nimport { useState, useEffect } from 'react';\nimport { Header, NavBar, ReviewDisplay, ViewFullReview } from './Components/ComponentExporter';\nimport { getReviews } from './API'\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const [category, setCategory] = useState('all');\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [viewingReview, setViewingReview] = useState({});\n  const [reviewComments, setReviewComments] = useState([]);\n  const [totalReviews, setTotalReviews] = useState(0);\n  useEffect(() => getReviews(category, setReviews, page, setLoading, setTotalReviews), [category, page])\n  return (\n    <div className=\"App\">\n      <Header\n        currentUser={currentUser}\n        setCurrentUser={setCurrentUser}\n        loggedIn={loggedIn}\n        setLoggedIn={setLoggedIn} />\n      {loggedIn ?\n        <main id=\"navBarAndReviewDisplay\">\n          <NavBar\n            setCategory={setCategory}\n            currentUser={currentUser}\n            setReviews={setReviews}\n            setLoading={setLoading}\n            page={page}\n            category={category} />\n          <Switch>\n            <Route exact path=\"/\">\n              {loading ? <p>loading...</p> :\n                <ReviewDisplay\n                  totalReviews={totalReviews}\n                  reviews={reviews}\n                  page={page}\n                  setPage={setPage}\n                  currentUser={currentUser}\n                  category={category}\n                  setReviews={setReviews}\n                  setLoading={setLoading}\n                  setViewingReview={setViewingReview}\n                  setReviewComments={setReviewComments} />}\n            </Route>\n            <Route exact path=\"/viewFullReview\">\n              {loading ? <p>loading...</p> :\n                <ViewFullReview\n                  viewingReview={viewingReview}\n                  reviewComments={reviewComments}\n                  setReviewComments={setReviewComments}\n                  currentUser={currentUser} />}\n            </Route>\n          </Switch>\n        </main> :\n        <main id=\"notLoggedIn\">\n          <p id=\"loggedOutText\">\n            <span id=\"boldStart\">Hey welcome to BoardGamiacs, </span>\n            home of reviews for games that you've never even heard of! Don't google them though, you'll challenge the whole legitimacy of this website. If you don't know or have a username, feel free to use \"tickle122\" to log in, don't hold it against me, I didn't generate the names.\n          </p>\n        </main>}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}